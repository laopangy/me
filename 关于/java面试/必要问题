自我介绍：
    面试官你好，我叫潘高远，今年27岁，有五年java开发工作经验，一直担任着java开发工程师的职责，我个人对于java的基础知识掌握的比较扎实，
    技术栈以SpringBoot、Mybatis、Mysql为核心，熟练从需求分析到系统落地的全流程开发。并且我有着系统从0到1的项目开发经验，也有一些前端开发经验比如VUE+ElementUI，甚至更老一点的SpringMVC+JSP+LayUI。
    以上是我的基本情况，我这次主要来面试该公司java开发工程师的岗位，期待能加入贵公司。



项目中你遇到了那些问题，如何解决的？
    就说我最近一个项目吧，这个项目经历了从一个万级数据量到千万数据量的增长的过程，在没有优化的情况下，当时一个查询页面查询的数据都要十几秒，
    后面我先检查Sql语句的性能，排除一些全表查询（比如：selcet *、以及where条件未命中索引的情况（比如使用了 is null，or ，Like'%'等）），
    然后再是减少一些复杂的查询（比如拆分大join，优先小表驱动大表；尽量避免嵌套子查询，改用join连接临时表；
    还有一些分页查询优化了（比如避免使用limit offset size，使用游标分页（where id>lastId））；或者先把分页ID查出来再关联数据）；
    还有一些就是索引的优化（比如是否满足最左前缀原则，隐式类型转换，用or函数连接等等）

    甚至查看过数据库innoDB缓存池大小（建议设成物理内存的70%~80%）；

    java代码层面的话减少数据库交互，能批量操作就批量操作，使用Mybatis时避免N+1的发生（使用join或者in合并查询）
    返回的结果集避免一些不必要的字段，或者数据量大的时候分批次处理并及时清空结果集。
    然后就是一些异步的操作了。


讲一下你第一个项目：
    最近做的是一个资产实时监控和数据管控的资产管理项目，其中主要记录公司的资产信息，比如电脑、交换机、服务器等等，然后利用流程引擎做资产的一个全流程周期操作，比如资产的申请、领用、归还、报废等，
    然后在此基础上扩展了数据可视化报表、资产盘点、资产日志等功能， 我的主要职责是与产品经理对接需求，确认技术可行性以及编写开发文档、表结构设计、代码编写、联调测试上线等工作，以及后续的项目维护。

    功能点：
        异步上传， 自定义一个异步操作，提供两个接口，一个用与用户上传文件（其中会定义一个不重复的ID，为了避免多个用户同时上传导致的重复），一个用户前端轮询查询异步处理返回的结果集
        

    相对来说我做的这些项目没有什么技术特别亮眼的地方，都是一些基础的功能实现，比如：
    使用Activiti做流程引擎，画流程图，然后使用activiti技术实现各个流程节点的操作，中间可有逻辑比较复杂的加签、转签等操作
    或者说使用异步做文件上传操作，
    或者做数据可视化报表时性能控制在一秒左右
    或者使用反射或者aop做拦截功能等
    或者做动态日志
    或者库位管理等

    使用自定义注解  然后切面新增或者修改接口 
    接口有规范  以update\insert\Delete开头，然后枚举匹配后给出处理逻辑  





从零到一开发项目需要注意什么：
    1.需求分析：需求分析是项目开发的第一步，需求分析的好坏直接影响到后续的开发工作。
    2.架构设计：架构设计是项目开发的第二步，架构设计的好坏直接影响到后续的开发工作。
    3.数据库设计：数据库设计是项目开发的第三步，数据库设计的好坏直接影响到后续的开发工作。
    4.代码编写：代码编写是项目开发的第四步，代码编写的好坏直接影响到后续的开发工作。
    5.测试：测试是项目开发的第五步，测试的好坏直接影响到后续的开发工作。
    6.上线：上线是项目开发的第六步，上线的好坏直接影响到后续的开发工作。

SpringCloud微服务加入SpringBoot单应用服务操作：
     1、微服务创建一个子模块，pom文件继承父模块
     2、配置注册中心nacos，yml添加地址
     3、启动类添加@EnableDiscoveryClient
     4、配置管理

java项目线上问题排查过程？
    1.定位问题：服务奔溃、接口超时、内存溢出、数据错误等等
    2.查看日志
    3.查看监控，是否是GC异常、内存溢出、慢SQL导致超时、外部接口调用异常等
    4.查看代码，是否是代码逻辑问题、SQL语句问题、配置问题等
    5.查看数据库，是否是数据库连接池问题、SQL语句问题、数据异常等
    6.查看服务器，是否是服务器资源不足、网络异常等


    


    


